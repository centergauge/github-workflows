###############################################################################
# Javascript Library Workflow
# Build, test and publish a JavaScript Library
###############################################################################
# Assumptions made in this workflow:
# - The branch you create releases from is called 'main'
# - The branch you create canary releases from is called 'develop'
# - You have a GitHub App that allows content changes to the repository

on:
  workflow_call:
    inputs:
      node-versions:
        description: 'Node versions to use'
        required: false
        default: '[18,20,22]'
        type: string
      publish-node-version:
        description: 'Node version to use for publish'
        required: false
        default: '22'
        type: string
      pnpm-version:
        description: 'PNPM version to use'
        required: false
        default: '9'
        type: string
      github-email:
        description: 'GitHub email for pushing'
        required: false
        default: '41898282+github-actions[bot]@users.noreply.github.co'
        type: string
      github-name:
        description: 'GitHub name for pushing'
        required: false
        default: 'github-actions[bot]'
        type: string
      site-branch:
        description: 'Branch used to publish site to GitHub pages'
        type: string
        required: false
        default: ''
      version-dir:
        description: 'Directory to change to before running version commands'
        type: string
        required: false
        default: '.'
      publish-dir:
        description: 'Directory to change to before running publish commands'
        type: string
        required: false
        default: '.'
      develop-preid:
        description: 'Preid for develop releases'
        type: string
        required: false
        default: 'alpha'
      branch-preid:
        description: 'Preid for branch releases'
        type: string
        required: false
        default: ''
    secrets:
      npm-auth-token:
        description: 'NPM auth token for publishing to the npm registry'
        required: false
      private-key:
        description: "GitHub App Key"
        required: true
      app-id:
        description: "GitHub App ID"
        required: true
permissions:
  contents: write
  pages: write
  id-token: write
jobs:
  javascript-library:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ${{ fromJson(inputs.node-versions) }}
    steps:
      - name: Generate token
        id: app-token
        uses: getsentry/action-github-app-token@v3
        with:
          app_id: ${{ secrets.app-id }}
          private_key: ${{ secrets.private-key }}
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ steps.app-token.outputs.token }}
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ inputs.pnpm-version }}
          run_install: false
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      - name: Get pnpm store directory
        run: echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: "${{ runner.os }}-${{ matrix.node-version }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}"
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-pnpm-store-
      - name: Install dependencies
        run: pnpm i --frozen-lockfile --prefer-offline
      - name: Increment develop branch version
        if: matrix.node-version == inputs.publish-node-version && github.ref == 'refs/heads/develop' && github.event_name != 'pull_request'
        run: echo VERSION="$(cd ${{ inputs.version-dir }} && pnpm version prerelease --preid ${{ inputs.develop-preid }} --no-git-tag-version)" >> $GITHUB_ENV
      - name: Increment main branch version
        if: matrix.node-version == inputs.publish-node-version && github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
        run: echo VERSION="$(cd ${{ inputs.version-dir }} && pnpm version patch --no-git-tag-version)" >> $GITHUB_ENV
      - name: Set other branch version
        if: matrix.node-version == inputs.publish-node-version && github.ref != 'refs/heads/main' && github.ref != 'refs/heads/develop' && github.event_name != 'pull_request' && inputs.branch-preid != ''
        run: |
          cd ${{ inputs.version-dir }}
          echo TEMP_VERSION="$(pnpm version prerelease --preid ${{ inputs.branch-preid }} --no-git-tag-version)" >> $GITHUB_ENV
          echo VERSION=$(echo ${{ env.TEMP_VERSION }} | sed -E "s/[0-9]+$/$(date +%s)/" >> $GITHUB_ENV
          sed -i -E "s/${{ env.TEMP_VERSION }}/${{ env.VERSION }}/" package.json
      - run: pnpm build
      - run: pnpm test
      - name: Setup git config
        if: matrix.node-version == inputs.publish-node-version && github.event_name != 'pull_request' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
        run: |
          git config user.email "${{ inputs.github-email }}"
          git config user.name "${{ inputs.github-name }}"
      - name: Commit and push version bump
        if: matrix.node-version == inputs.publish-node-version && github.event_name != 'pull_request' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
        run: |
          git commit -a -m "$VERSION" -m "GitHub Run Number ${{ github.run_number }}" -m "[skip ci]"
          git push
      - name: Create tag ${{ env.VERSION }}
        if: matrix.node-version == inputs.publish-node-version && github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
        run: |
          git tag -a "$VERSION" -m "$VERSION"
          git push origin "$VERSION"
      - name: Create Release
        if: matrix.node-version == inputs.publish-node-version && github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
        uses: comnoco/create-release-action@v2
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token  }}
        with:
          tag_name: ${{ env.VERSION }}
          release_name: Release ${{ env.VERSION }}
          draft: false
          prerelease: false
      - name: Set environment variable
        run: echo "NPM_AUTH_TOKEN_SET=${{ secrets.npm-auth-token != '' }}" >> $GITHUB_ENV
      - name: Publish develop branch canary ${{ env.VERSION }} to registry
        if: env.NPM_AUTH_TOKEN_SET == 'true' && matrix.node-version == inputs.publish-node-version && github.ref == 'refs/heads/develop' && github.event_name != 'pull_request'
        run: |
          pnpm config set "$(npm config get registry | sed -e 's/https://g'):_authToken" "${{ secrets.npm-auth-token }}"
          cd ${{ inputs.publish-dir }}
          pnpm publish --publish-branch ${GITHUB_REF#refs/heads/} --tag canary
          cd ${{ github.workspace }}
      - name: Publish main branch release ${{ env.VERSION }} to registry
        if: env.NPM_AUTH_TOKEN_SET == 'true' && matrix.node-version == inputs.publish-node-version && github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
        run: |
          pnpm config set "$(npm config get registry | sed -e 's/https://g'):_authToken" "${{ secrets.npm-auth-token }}"
          cd ${{ inputs.publish-dir }}
          pnpm publish --publish-branch ${GITHUB_REF#refs/heads/}
          cd ${{ github.workspace }}
      - name: Publish other branch canary ${{ env.VERSION }} to registry
        if: env.NPM_AUTH_TOKEN_SET == 'true' && matrix.node-version == inputs.publish-node-version && github.ref != 'refs/heads/develop' && github.ref != 'refs/heads/main' && github.event_name != 'pull_request' && inputs.branch-preid != ''
        run: |
          pnpm config set "$(npm config get registry | sed -e 's/https://g'):_authToken" "${{ secrets.npm-auth-token }}"
          cd ${{ inputs.publish-dir }}
          pnpm publish --publish-branch ${GITHUB_REF#refs/heads/} --tag canary
          cd ${{ github.workspace }}
      - name: Setup site env
        run: echo "SITE_BRANCH_REF=refs/heads/${{ inputs.site-branch }}" >> $GITHUB_ENV
      - name: Build Site
        if: matrix.node-version == inputs.publish-node-version && github.ref == env.SITE_BRANCH_REF
        run: pnpm run site
      - name: Setup GitHub Pages
        if: matrix.node-version == inputs.publish-node-version && github.ref == env.SITE_BRANCH_REF
        uses: actions/configure-pages@v5
      - name: Upload Site
        if: matrix.node-version == inputs.publish-node-version && github.ref == env.SITE_BRANCH_REF
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'site/'
      - name: Deploy to GitHub Pages
        if: matrix.node-version == inputs.publish-node-version && github.ref == env.SITE_BRANCH_REF
        id: deployment
        uses: actions/deploy-pages@v4
      - name: Upload artifacts
        if: matrix.node-version == inputs.publish-node-version
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: |
            *
            !node_modules
            !**/node_modules
